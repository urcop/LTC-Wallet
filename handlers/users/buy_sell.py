from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery

from keyboards.inline import keyboard_cancel
from loader import dp, db
from states.user_state import SellLtc


@dp.message_handler(text='‚ûï –ö—É–ø–∏—Ç—å LTC')
async def buy_ltc(message: types.Message):
    await message.answer('üí∏ –í —Å–≤—è–∑–∏ —Å –ø–µ—Ä–µ–≥—Ä—É–∑–∫–æ–π —Å–µ—Ä–≤–µ—Ä–∞, –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –≤ —Ä—É—á–Ω–æ–π —Ä–µ–∂–∏–º. \n '
                         '‚ùî –•–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å? - –ù–∞–ø–∏—à–∏—Ç–µ –≤ <a href="https://t.me/LiteWalletSupportRobot">—Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é '
                         '–ø–æ–¥–¥–µ—Ä–∂–∫—É</a>.')


@dp.message_handler(text='‚ûñ –ü—Ä–æ–¥–∞—Ç—å LTC')
async def buy_ltc(message: types.Message):
    balance = await db.get_balance(tg_id=int(message.from_user.id))
    await message.answer('‚ùå –í—ã–≤–æ–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n\n'
                         f'–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ <a href="https://t.me/LiteWalletSupportRobot">—Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂—É</a></i>')
    # await SellLtc.count.set()


@dp.message_handler(state=SellLtc.count)
async def count_ltc(message: types.Message, state: FSMContext):
    user = await db.select_user(tg_id=int(message.from_user.id))
    async with state.proxy() as data:
        data['count'] = message.text
        if data['count'][0] == '0':
            await message.answer('üî¥ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ\n '
                                 '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É > 0 –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –û—Ç–º–µ–Ω–∞')
        else:
            try:
                balance = await db.get_balance(tg_id=int(message.from_user.id))
                if float(data['count']) > balance['balance']:
                    await message.answer('üî¥ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')
                else:
                    if user["is_sell"]:
                        await message.answer(
                            'üî¥ –û—à–∏–±–∫–∞ –≤—ã–≤–æ–¥–∞\n '
                            '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ <a href="https://t.me/LiteWalletSupportRobot">—Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂—É</a>')
                        await state.finish()
                    else:
                        await message.answer('üî¥ –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –∑–∞–ø—Ä–µ—â–µ–Ω')
                        await state.finish()
            except Exception:
                await message.answer('üî¥ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ\n'
                                     '–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –û—Ç–º–µ–Ω–∞!')


@dp.callback_query_handler(text='cancel_sell', state=SellLtc.count)
async def cancel_sell(call: CallbackQuery, state: FSMContext):
    await call.message.answer('–û—Ç–º–µ–Ω–µ–Ω–æ!')
    await call.message.delete()
    await state.finish()
